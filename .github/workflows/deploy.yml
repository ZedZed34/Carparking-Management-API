name: Deploy to Railway

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      # provide these as GitHub repo secrets
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
      RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}
      RAILWAY_ENVIRONMENT: production   # or your env name

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: npm i -g @railway/cli

      # set non-interactive context for all subsequent commands
      - name: Set Railway context (project & environment)
        run: |
          railway use --project "$RAILWAY_PROJECT_ID" --environment "$RAILWAY_ENVIRONMENT"
          railway status || true

      - name: Deploy (Dockerfile) to Railway
        run: |
          railway up --ci --detach --service "$RAILWAY_SERVICE_ID"

      - name: Run migrations
        run: |
          railway run --service "$RAILWAY_SERVICE_ID" \
            python manage.py migrate --noinput

      - name: Collect static
        run: |
          railway run --service "$RAILWAY_SERVICE_ID" \
            python manage.py collectstatic --noinput

      - name: Smoke test /healthz (retry)
        run: |
          set -e
          for i in $(seq 1 10); do
            echo "Try #$i: hitting internal healthz..."
            if railway run --service "$RAILWAY_SERVICE_ID" \
                 bash -lc 'curl -fsS http://127.0.0.1:${PORT:-8000}/healthz/'; then
              echo "healthz OK"; exit 0
            fi
            sleep 3
          done
          echo "healthz failed"; exit 1
